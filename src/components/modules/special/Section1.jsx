"use client";

import { useState, useRef } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation } from "swiper/modules";
import "swiper/css";
import "swiper/css/navigation";
import {
  FaMobileAlt,
  FaInfoCircle,
  FaArrowLeft,
  FaArrowRight,
} from "react-icons/fa";

const slides = [
  {
    title: "مقیاس پذیری(Scalability)",
    text: `مقیاس‌پذیری یکی از مهم‌ترین ویژگی‌های سیستم‌های مدرن است که به سازمان‌های بزرگ کمک می‌کند تا همزمان با رشد کسب‌وکار خود، عملکرد بالایی را حفظ کنند. انتخاب یک سیستم مقیاس‌پذیر از همان ابتدا می‌تواند از هزینه‌های اضافی و مشکلات آینده جلوگیری کند و سازمان را در مسیر رشد پایدار قرار دهد.

وقتی به دنبال جواب این سؤال هستیم که یکپارچه سازی نرم افزار چیست باید به ذهن بسپاریم که عوامل مختلفی می‌توانند بر سهولت یا دشواری ادغام برنامه‌های ما تأثیر بگذارند. برای نمونه تفاوت در زبان برنامه و سایر مسائل فنی، مانند معماری هر نرم افزار، می‌توانند مشکلاتی را برای ما ایجاد کنند؛ بنابراین، تلاش برای یکپارچه سازی آنها گاهی اوقات یک کار سخت و البته طاقت فرسا است و چنین درخواستی مستلزم کار وقت گیر و همچنین پرهزینه می باشد.`,
    buttons: [
      {
        title: "انعطاف‌پذیری در برابر تغییرات ",
        content:
          "سازمان می‌تواند با گسترش نیازها یا تغییرات در استراتژی، سیستم را بدون نیاز به جایگزینی کل ساختار گسترش دهد.",
      },
      {
        title: "افزایش کارایی",
        content: "مدیریت بهینه منابع و کاهش تأخیر در پردازش داده‌ها.",
      },
      {
        title: "مدیریت بهتر هزینه‌ها ",
        content:
          "استفاده از منابع فقط بر اساس نیاز و جلوگیری از سرمایه‌گذاری اضافی.",
      },
      {
        title: "پشتیبانی از رشد سازمان  ",
        content:
          "مقیاس‌پذیری امکان پشتیبانی از رشد در تعداد کاربران، شعب یا حجم داده‌ها را فراهم می‌کند.",
      },
    ],
  },
  {
    title: "کاربرپسندی نرم‌افزارها (User-Friendliness)",
    text: `کاربرپسندی نرم‌افزارها (User-Friendliness) یکی از جنبه‌های کلیدی طراحی نرم‌افزار است که به توانایی کاربران در تعامل راحت، سریع، و کارآمد با یک نرم‌افزار اشاره دارد. نرم‌افزارهایی که کاربرپسند طراحی می‌شوند، تجربه کاربری (UX) بهتری ارائه می‌دهند، باعث افزایش بهره‌وری و رضایت کاربران می‌شوند و احتمال استفاده مداوم از نرم‌افزار را بالا می‌برند.

نرم افزار های حاضر ، به عنوان بخش های جدایی ناپذیر از سیستمهای یکپارچه اداری و مالی آفیس یار به گونه ای طراحی شده اند که می توانند با حذف کاغذ بازی ، امضاء های دستی و ارجاعات سنتی و ارتباط زنجیر وار و تنگاتنگ خود با یکدیگر و با خذف یا به حداقل رساندن دخالت نیروی انسانی در واحد های اداری ، امکانات و تسهیلات کارآمدی را در اختیار مدیران قرار می دهد .`,
    buttons: [
      {
        title: "رابط کاربری ساده و جذاب (UI)",
        content: "طراحی بصری واضح و قابل فهم",
      },
      {
        title: "سهولت استفاده",
        content:
          "یادگیری و استفاده از نرم‌افزار باید آسان باشد، حتی برای کاربران تازه‌کار. نیاز به آموزش یا مستندات پیچیده نباید وجود داشته باشد.",
      },
      {
        title: "سرعت و کارایی",
        content:
          "عملکرد نرم‌افزار باید سریع و بدون تأخیر باشد. قابلیت انجام وظایف با حداقل کلیک یا مراحل.",
      },
      {
        title: "واکنش‌پذیری (Responsiveness)",
        content:
          "عملکرد نرم‌افزار در دستگاه‌ها و اندازه‌های مختلف صفحه (کامپیوتر، موبایل، تبلت).",
      },
    ],
  },
  {
    title: "فرم های آماده سازمان و چالش ها",
    text: `بسیاری از سازمان‌ها به دنبال راه‌حل‌هایی برای ساده‌سازی و استانداردسازی فرآیندهای خود هستند تا فرم‌های اطلاعاتی را جایگزین گردش درخواست‌های مکاتبه‌ای نمایند. در این میان، طراحی و پیاده‌سازی فرم‌های اطلاعاتی در نرم‌افزارهای فرم‌ساز، اگرچه ابزاری قدرتمند برای اتوماسیون و دیجیتالی‌سازی فرآیندها است، اما می‌تواند برای برخی از سازمان‌ها چالش‌برانگیز و پیچیده باشد.`,
    buttons: [
      {
        title: "پیچیدگی در طراحی",
        content: `نیاز به دانش فنی برای طراحی فرم‌های پیچیده.
        تعریف گردش‌کار (Workflow) متناسب با نیازهای سازمان.`,
      },
      {
        title: "زمانبر بودن فرایند",
        content: `ایجاد فرم‌های سفارشی ممکن است وقت‌گیر باشد.
          هماهنگ کردن فرم‌ها با سایر فرآیندهای سازمانی به تلاش زیادی نیاز دارد.`,
      },
      {
        title: "استاندارد سازی اطلاعات",
        content: `دستیابی به ساختاری استاندارد و مشابه در فرم‌های مختلف.
          کاهش تفاوت‌های جزئی که می‌تواند مدیریت اطلاعات را دشوار کند.`,
      },
    ],
  },
  {
    title: "فرم های آماده سازمان و راه حل ها",
    text: `فرم‌های اطلاعاتی عمومی با ساختار استاندارد می‌توانند راهکاری موثر برای رفع نیاز سازمان‌ها در مکانیزه‌سازی درخواست‌ها باشند. سازمان‌ها می‌توانند با استفاده از سیستم اتوماسیون اداری ایمن پرداز و بهره‌گیری از الگوهای آماده، فرآیند طراحی را ساده‌تر کنند و از پیچیدگی‌های اضافی جلوگیری نمایند. این راهکار نه‌تنها بهره‌وری سازمان را افزایش می‌دهد، بلکه فرآیندهای کاری را شفاف‌تر و قابل‌پیگیری‌تر می‌سازد.`,
    buttons: [
      {
        title: "استفاده از الگو های آماده",
        content: `سیستم های یکپارچه ایمن پرداز، الگوهای از پیش طراحی‌شده‌ای برای فرم‌های رایج ارائه می‌دهند.)
        این الگوها را می‌توان با تغییرات جزئی برای سازمان سفارشی‌سازی کرد.`,
      },
      {
        title: "یکپارچگی فرم‌ها با سیستم‌های یکپارچه سازمانی",
        content: `اتصال فرم‌ها از طریق اتوماسون اداری به زیرسیستم‌هایی مانند مدیریت منابع انسانی یا سیستم تأمین
        خودکارسازی مراحل بعدی (مانند اطلاع‌رسانی و تأیید).`,
      },
    ],
  },
  {
    title: "نسخه موبایل با تکنولوژی PWA (Progressive Web App)",
    text: `نسخه موبایل با تکنولوژی PWA (Progressive Web App) راهکاری مدرن برای توسعه نرم‌افزارهای کاربردی است که ترکیبی از ویژگی‌های اپلیکیشن‌های وب و موبایل را ارائه می‌دهد. این فناوری به کاربران اجازه می‌دهد تا از امکانات پیشرفته یک اپلیکیشن موبایلی (مانند دسترسی آفلاین، ارسال اعلان‌ها، و عملکرد سریع) در مرورگرهای وب استفاده کنند.

در سیستم های یکپارچه آفیس یار PWA ترکیبی ایده‌آل از اپلیکیشن‌های وب و موبایل است که می‌تواند تجربه کاربری مدرنی را فراهم کند. این تکنولوژی به‌ویژه برای کسب‌وکارهایی که به دنبال کاهش هزینه‌ها و افزایش دسترسی کاربران هستند، یک راهکار ایده‌آل است.
`,
    buttons: [
      {
        title: "نصب‌پذیری",
        content: `کاربران می‌توانند PWA را مستقیماً از مرورگر به صفحه اصلی گوشی خود اضافه کنند.`,
      },
      {
        title: "قابلیت اجرا به‌صورت آفلاین",
        content: ` با استفاده از تکنولوژی‌هایی مانند Service Workers، PWA می‌تواند محتوای خود را در حافظه کش ذخیره کرده و حتی در صورت عدم دسترسی به اینترنت اجرا شود.`,
      },
      {
        title: "واکنش‌پذیری (Responsive Design)",
        content: `PWA برای اجرا روی انواع دستگاه‌ها (موبایل، تبلت، یا دسکتاپ) بهینه شده است.`,
      },
      {
        title: "سرعت بالا ",
        content: ` بارگذاری سریع به لطف استفاده از کش و بهینه‌سازی منابع.`,
      },
      {
        title: "ارسال اعلان‌های پوش (Push Notifications)",
        content: `مشابه اپلیکیشن‌های موبایل، امکان ارسال اعلان‌ها به کاربران را فراهم می‌کند.`,
      },
      {
        title: "بروزرسانی خودکار ",
        content: ` کاربران نیازی به دانلود نسخه جدید ندارند؛ تغییرات به‌طور خودکار اعمال می‌شوند .`,
      },
      {
        title: "امنیت بالا ",
        content: `PWA تنها از طریق پروتکل HTTPS اجرا می‌شود که امنیت داده‌ها را تضمین می‌کند.`,
      },
    ],
  },
  {
    title: "یکپارچگی بین تمامی زیر سیستم ها",
    text: `یکپارچگی بین سیستم‌های مختلف در سازمانها ، شرکت ها وشهرداری‌ها یکی از کلیدی‌ترین عوامل برای بهبود عملکرد و کارایی این نهادها است. سیستم‌های ایمن پرداز با ارائه راهکارهای جامع و یکپارچه، توانسته‌اند به شکلی منحصربه‌فرد نیازهای سازمانها را برآورده کنند. این راهکارها با ترکیب اتوماسیون اداری، حسابداری مالی، مدیریت منابع انسانی، لجستیک و سیستم‌های شهرسازی و درآمد، فرآیندهای سازمانها را به طور مؤثر بهینه می‌سازند.`,
    buttons: [
      {
        title: "افزایش هماهنگی بین واحدها",
        content: `ارتباط بدون واسطه بین بخش‌های مختلف شهرداری، مانند واحدهای مالی، منابع انسانی، شهرسازی و لجستیک، باعث افزایش هماهنگی و کاهش دوباره‌کاری می‌شود.`,
      },
      {
        title: "دسترسی به اطلاعات متمرکز",
        content: `اطلاعات تمام واحدها در یک پلتفرم متمرکز ذخیره و مدیریت می‌شود، که به مدیران امکان می‌دهد تصمیم‌گیری‌های بهتری بر اساس داده‌های دقیق و به‌روز داشته باشند.`,
      },
      {
        title: "شفافیت در مدیریت درآمد و هزینه‌ها",
        content: `سیستم‌های ایمن پرداز امکان ردیابی دقیق درآمدها، هزینه‌ها و منابع مالی را فراهم می‌کنند و با ارتباط بین سیستم درآمد و حسابداری مالی، شفافیت بیشتری در مدیریت مالی شهرداری به وجود می‌آید.`,
      },
      {
        title: "بهینه‌سازی مدیریت پروژه‌های شهری",
        content: ` ارتباط بین واحد لجستیک و سیستم شهرسازی، برنامه‌ریزی و مدیریت پروژه‌های شهری را تسهیل کرده و به تحقق سریع‌تر و بهتر اهداف توسعه شهری کمک می‌کند.`,
      },
    ],
  },
  {
    title: "راهنمای آموزشی آنلاین و آفلاین",
    text: `سیستمهای یکپارچه اتوماسیون اداری و مالی ایمن پرداز با ارائه مخزن گسترده‌ای از فیلم‌های آموزشی ارزنده و راهنماهای آنلاین و آفلاین، نیازهای آموزشی کاربران را به صورت جامع و موثر برطرف می‌کند. این امکانات به سازمان‌ها کمک می‌کند تا بدون وابستگی به فضا و زیرساخت‌های سنتی آموزشی، فرآیند یادگیری را بهینه‌سازی کنند و دسترسی به محتوای آموزشی را برای همه کاربران، فارغ از سطح مهارتی، فراهم آورند.

قابلیت‌های آموزشی اتوماسیون اداری ایمن پرداز، نه‌تنها یادگیری و استفاده کاربران از نرم‌افزار را ساده‌تر و سریع‌تر می‌کند، بلکه به سازمان‌ها این امکان را می‌دهد تا با کاهش هزینه‌های آموزشی، بهره‌وری را افزایش دهند. دسته‌بندی دقیق و جامع محتواها، کاربران را در هر سطح مهارتی پشتیبانی کرده و تجربه‌ای موثر و کاربرپسند ارائه می‌دهد.`,
    buttons: [
      {
        title: "فیلم های آموزشی کاربردی",
        content: `مخزنی شامل ویدئوهای آموزشی برای راهنمایی کامل کاربران در استفاده از امکانات.
        ارائه مطالب به زبان ساده و به‌صورت مرحله‌به‌مرحله.
        دسترسی مستقیم از محیط نرم‌افزار برای سهولت استفاده.`,
      },
      {
        title: "یکپارچگی با نرم‌افزار",
        content: `امکان دسترسی به راهنماها مستقیماً از طریق بخش‌های مختلف سامانه.
       ارائه نکات آموزشی مرتبط با هر ماژول در زمان استفاده.
`,
      },
    ],
  },
];

export default function TextSliderWithPopups() {
  const swiperRef = useRef(null);
  const [openIndex, setOpenIndex] = useState(null);

  return (
    <div className="max-w-6xl mx-auto relative px-4 pb-2 pt-4">
      <div className="flex justify-between mb-4">
        <button
          onClick={() => swiperRef.current?.slidePrev()}
          className="flex items-center gap-2 bg-gray-800 hover:bg-gray-700 text-[#49C5B6] p-3 cursor-pointer rounded-full transition"
        >
          <FaArrowRight />
        </button>
        <button
          onClick={() => swiperRef.current?.slideNext()}
          className="flex items-center gap-2 bg-gray-800 hover:bg-gray-700 text-[#49C5B6] p-3 cursor-pointer rounded-full transition"
        >
          <FaArrowLeft />
        </button>
      </div>

      <Swiper
        modules={[Navigation]}
        spaceBetween={30}
        slidesPerView={1}
        loop
        autoHeight={true} 
        onSwiper={(swiper) => {
          swiperRef.current = swiper;
        }}
        pagination={{ clickable: true }}
      >
        {slides.map((slide, index) => (
          <SwiperSlide key={index}>
            <div className="bg-gray-900 text-gray-100 px-2 md:px-4 lg:px-6 py-5 rounded-xl shadow-lg relative">
              <h3 className="text-sm lg:text-base font-medium flex items-center gap-2 mb-3">
                <FaMobileAlt className="text-[#49C5B6]" />
                {slide.title}
              </h3>
              <p className="text-gray-300 whitespace-pre-line mb-4 text-justify font-medium text-xs md:text-sm leading-relaxed">
                {slide.text}
              </p>
              <div className="flex flex-col gap-2">
                {slide.buttons.map((btn, i) => (
                  <CollapsibleButton
                    key={i}
                    index={i}
                    openIndex={openIndex}
                    setOpenIndex={setOpenIndex}
                    title={btn.title}
                    content={btn.content}
                    swiperRef={swiperRef} 
                  />
                ))}
              </div>
            </div>
          </SwiperSlide>
        ))}
      </Swiper>
    </div>
  );
}

// کامپوننت collapsible
function CollapsibleButton({
  title,
  content,
  index,
  openIndex,
  setOpenIndex,
  swiperRef,
}) {
  const contentRef = useRef(null);
  const [height, setHeight] = useState(0);

  const toggle = () => {
    if (openIndex === index) {
      setHeight(0);
      setOpenIndex(null);
    } else {
      setHeight(contentRef.current.scrollHeight);
      setOpenIndex(index);
    }

    // 👇 آپدیت ارتفاع Swiper بعد از تغییر
    setTimeout(() => {
      swiperRef.current?.updateAutoHeight(300);
    }, 50);
  };

  if (openIndex !== index && height !== 0) setHeight(0);

  const isOpen = openIndex === index;

  return (
    <div className="overflow-hidden rounded shadow-sm">
      <button
        onClick={toggle}
        className="w-full text-left bg-slate-900 hover:bg-slate-800 px-1 md:px-2 lg:px-4 py-2 rounded-t flex items-center cursor-pointer justify-between transition-colors duration-300 font-medium"
      >
        <span className="flex items-center text-xs lg:text-sm gap-2">
          <FaInfoCircle className="text-yellow-400" />
          {title}
        </span>
        <span
          className={`transition-transform duration-300 text-sm ${
            isOpen ? "rotate-180" : ""
          }`}
        >
          ▼
        </span>
      </button>

      <div
        ref={contentRef}
        style={{ maxHeight: height }}
        className="overflow-hidden transition-[max-height] duration-500 ease-in-out bg-slate-800 rounded-b"
      >
        <p className="py-2 px-3 text-justify text-gray-300 whitespace-pre-line text-xs lg:text-sm leading-relaxed">
          {content}
        </p>
      </div>
    </div>
  );
}
